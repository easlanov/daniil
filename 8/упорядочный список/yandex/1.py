"""
https://education.yandex.ru/ege/task/e35fe06d-0405-44b7-8976-4bd4bc4aaa7b

Все 6-буквенные слова, в составе которых могут быть только буквы П, Р, О, Б, Н, И, К, записаны в алфавитном порядке и
пронумерованы.

Вот начало списка:
ББББББ
БББББИ
БББББК
БББББН
БББББО
БББББП
БББББР
ББББИБ
...
Под каким номером в списке идёт последнее слово с тремя буквами О (остальные буквы при этом не повторяются)?
"""

from itertools import *

# объявляем список под названием "p", куда сохраняем нумерацию подходящих нам
p = []

# проходимся по каждому слову, которые создала функция product и отсортировала функция sorted
# функция enumerate позволяет создать счетчик i - это порядковый номер слова в списке
# i - порядковый номе слова
# v - само слово
for i, v in enumerate(sorted(product("ПРОБНИК", repeat=6))):
    # делаем строку из слова v
    w_str = "".join(v)
    # считаем количество буквы "О" в слове, если их 3 штуки, то слово подходит, но нам так же надо, чтобы остальные 3
    # буквы были всегда разными
    # set(w_str) - вернет уникальные буквы в слове, в том числе и "О", соответственно таких букв должно быть 4
    if w_str.count("О") == 3 and len(set(w_str)) == 4:
        # Так как i это порядковый номер слова в списке слов и начинается с 0, то нам надо прибавить единицу, потому что
        # в задаче указано, что слова пронумерованы, а обычно нумеруют начиная с единицы, а не с нуля
        # это в программе все начинается с нуля
        p.append(i + 1)

print(p[-1])
